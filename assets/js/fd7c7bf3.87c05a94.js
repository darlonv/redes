"use strict";(self.webpackChunkalgoritmos=self.webpackChunkalgoritmos||[]).push([[8692],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>k});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},p=function(e){var a=u(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(t),m=o,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return t?n.createElement(k,l(l({ref:a},p),{},{components:t})):n.createElement(k,l({ref:a},p))}));function k(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=m;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<r;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294),o=t(6010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,l),hidden:t},a)}},4866:(e,a,t)=>{t.d(a,{Z:()=>E});var n=t(7462),o=t(7294),r=t(6010),l=t(2466),i=t(6550),s=t(1980),u=t(7392),p=t(12);function c(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:o}}=e;return{value:a,label:t,attributes:n,default:o}}))}function d(e){const{values:a,children:t}=e;return(0,o.useMemo)((()=>{const e=a??c(t);return function(e){const a=(0,u.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function m(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function k(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.k6)(),r=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const a=new URLSearchParams(n.location.search);a.set(r,e),n.replace({...n.location,search:a.toString()})}),[r,n])]}function b(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,r=d(e),[l,i]=(0,o.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:r}))),[s,u]=k({queryString:t,groupId:n}),[c,b]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,r]=(0,p.Nk)(t);return[n,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:n}),N=(()=>{const e=s??c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{N&&i(N)}),[N]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var N=t(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:a,block:t,selectedValue:i,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.o5)(),d=e=>{const a=e.currentTarget,t=p.indexOf(a),n=u[t].value;n!==i&&(c(a),s(n))},m=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=p.indexOf(e.currentTarget)+1;a=p[t]??p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;a=p[t]??p[p.length-1];break}}a?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},a)},u.map((e=>{let{value:a,label:t,attributes:l}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>p.push(e),onKeyDown:m,onClick:d},l,{className:(0,r.Z)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":i===a})}),t??a)})))}function f(e){let{lazy:a,children:t,selectedValue:n}=e;if(t=Array.isArray(t)?t:[t],a){const e=t.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,o.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function v(e){const a=b(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},o.createElement(h,(0,n.Z)({},e,a)),o.createElement(f,(0,n.Z)({},e,a)))}function E(e){const a=(0,N.Z)();return o.createElement(v,(0,n.Z)({key:String(a)},e))}},2221:(e,a,t)=>{t.d(a,{Z:()=>o});var n=t(7294);function o(e){let a,{bib:t,page:o,type:r,inline:l=!1,link:i=!1}=e,s={tanenbaum_2011_book:{cite:"TANENBAUM 2011",abnt:"TANENBAUM, A.S., Wetherall, D. Redes de Computadores. 5. ed. S\xe3o Paulo: Pearson do Brasil, 2011.",link:"https://plataforma.bvirtual.com.br/Acervo/Publicacao/2610"},kurose_2013_book:{cite:"KUROSE 2013",abnt:"KUROSE, Jim; ROSS, Keith W. Redes de computadores e a internet: uma abordagem top-down. 6.ed. S\xe3o Paulo: Pearson, 2013. ISBN 9788581436777.",link:"https://plataforma.bvirtual.com.br/Acervo/Publicacao/198909"},torres_2009_book:{cite:"TORRES 2009",abnt:"TORRES, G. Redes de Computadores. Rio de Janeiro: Novaterra, 2009. ISBN 978-85-61893-05-7."},stevens_1994_book:{cite:"STEVENS 1994",abnt:"STEVENS, W. R. TCP/IP Illustrated, Volume 1: The Protocols. Boston, USA: Addison-Wesley/Pearson Education, 1994. ISBN 0-201-63346-9."},rfc_791_site:{cite:"IETF 1981",abnt:"IETF. RFC 791: Internet Protocol. 1981.",link:"https://datatracker.ietf.org/doc/html/rfc791"},rfc_1058_site:{cite:"IETF 1988",abnt:"IETF. RFC 1058: Routing Information Protocol. 1988.",link:"https://datatracker.ietf.org/doc/html/rfc1058"},rfc_1131_site:{cite:"IETF 1989",abnt:"IETF. RFC 1131: The OSPF Specification. 1989.",link:"https://datatracker.ietf.org/doc/html/rfc1131"}};return r?(a=s[t][r],i&&(a=n.createElement("a",{href:s[t].link,target:"_blank"},a))):(a=o?s[t].cite+", pg. "+o:s[t].cite,l||(a="("+a+")"),i&&(a=n.createElement("a",{href:s[t].link,target:"_blank"},a))),n.createElement(n.Fragment,null,a)}},7274:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var n=t(7462),o=(t(7294),t(3905));t(4866),t(5162),t(2221);const r={},l="Containers",i={unversionedId:"Docker/Containers",id:"Docker/Containers",title:"Containers",description:"Para a execu\xe7\xe3o de um comando docker, a sintaxe geral \xe9:",source:"@site/docs/10-Docker/02-Containers.mdx",sourceDirName:"10-Docker",slug:"/Docker/Containers",permalink:"/redes/docs/Docker/Containers",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/10-Docker/02-Containers.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introdu\xe7\xe3o",permalink:"/redes/docs/Docker/Intro"},next:{title:"Volumes",permalink:"/redes/docs/Docker/Volumes"}},s={},u=[{value:"run",id:"run",level:2},{value:"ps",id:"ps",level:2},{value:"start",id:"start",level:2},{value:"-it",id:"-it",level:2},{value:"stop",id:"stop",level:2},{value:"rm",id:"rm",level:2},{value:"pause unpause",id:"pause-unpause",level:2},{value:"portas",id:"portas",level:2}],p={toc:u},c="wrapper";function d(e){let{components:a,...t}=e;return(0,o.kt)(c,(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"containers"},"Containers"),(0,o.kt)("p",null,"Para a execu\xe7\xe3o de um comando docker, a sintaxe geral \xe9:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker <par\xe2metros>\n")),(0,o.kt)("p",null,"Um ",(0,o.kt)("em",{parentName:"p"},"container")," \xe9 uma inst\xe2ncia de uma ",(0,o.kt)("em",{parentName:"p"},"imagem"),". Podemos fazer uma analogia dos containers e imagens com os objetos e classes da orienta\xe7\xe3o a objetos. Para que um container possa ser executado, \xe9 necess\xe1rio que seja informado a partir de qual imagem ele deve ser executado."),(0,o.kt)("h2",{id:"run"},"run"),(0,o.kt)("p",null,"Para criar um container, utilizamos ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("em",{parentName:"li"},"Hello world"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run hello-world\n")),(0,o.kt)("p",null,"Neste caso, o par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"run")," indica que um container ser\xe1 criado a partir da imagem ",(0,o.kt)("inlineCode",{parentName:"p"},"hello-world"),"."),(0,o.kt)("p",null,"Observe que o container \xe9 criado, executado e encerrado."),(0,o.kt)("h2",{id:"ps"},"ps"),(0,o.kt)("p",null,"Para observarmos os containers em execu\xe7\xe3o:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker container ps\n")),(0,o.kt)("p",null,"ou ent\xe3o, de maneira simplificada:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,o.kt)("p",null,"Caso a sa\xedda esteja vazia, \xe9 porque n\xe3o h\xe1 nenhum container em execu\xe7\xe3o no momento."),(0,o.kt)("p",null,"Para que sejam visualizados todos os containers:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,o.kt)("p",null,"Sa\xedda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                          PORTS                                            NAMES\n3b9de5ab5855   hello-world          "/hello"                 20 minutes ago   Exited (0) About a minute ago                                                    upbeat_euler\n')),(0,o.kt)("p",null,"Algumas podem ser observadas aqui:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CONTAINER ID"),": identifica\xe7\xe3o \xfanica do container, gerada automaticamente;"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"IMAGE"),": Imagem utilizada para o container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"COMMANDO"),": Comando executado ao inicializar o container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NAMES"),": Nome \xfanico para o conteiner.")),(0,o.kt)("p",null,"O nome do container pode ser informado durante a cria\xe7\xe3o do container, utilizando o par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"--name"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name hello hello-world\n")),(0,o.kt)("p",null,"Ap\xf3s a execu\xe7\xe3o, podemos visualizar o que foi criado:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,o.kt)("p",null,"Sa\xedda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                         PORTS                                            NAMES\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                                                        hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                                                        upbeat_euler\n')),(0,o.kt)("p",null,"Observe que um novo ",(0,o.kt)("inlineCode",{parentName:"p"},"CONTAINER ID")," foi gerado, e o nome do container foi o informado (",(0,o.kt)("inlineCode",{parentName:"p"},"hello"),")."),(0,o.kt)("h2",{id:"start"},"start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker start <id ou nome do container>\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker start 3da575d7b1b5\n")),(0,o.kt)("p",null,"Neste caso, nada foi mostrado na tela porque por padr\xe3o o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"start")," coloca o container para execu\xe7\xe3o em segundo plano. Para que possamos visualizar a sa\xedda, precisamos informar o par\xe2metro ",(0,o.kt)("em",{parentName:"p"},"attach")," ",(0,o.kt)("inlineCode",{parentName:"p"},"-a"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker start -a 3da575d7b1b5\n")),(0,o.kt)("h2",{id:"-it"},"-it"),(0,o.kt)("p",null,"No exemplo do ",(0,o.kt)("em",{parentName:"p"},"hello-world"),", n\xe3o h\xe1 intera\xe7\xe3o com o container. Por\xe9m, \xe9 poss\xedvel interagir com terminais dentro do container, com os par\xe2metros ",(0,o.kt)("inlineCode",{parentName:"p"},"-t")," (terminal) e ",(0,o.kt)("inlineCode",{parentName:"p"},"-i")," (interativo). Estes par\xe2metros podem ser agrupados, formando ",(0,o.kt)("inlineCode",{parentName:"p"},"-ti")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Shell em um container ubuntu")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -ti ubuntu /bin/bash\n")),(0,o.kt)("p",null,"Neste caso, foi aberto um terminal bash dentro do container."),(0,o.kt)("p",null,"Em uma nova janela (novo terminal), vamos observar os containers em execu\xe7\xe3o."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,o.kt)("p",null,"Sa\xedda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED         STATUS         PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              7 seconds ago   Up 7 seconds                            interesting_jang\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago               upbeat_euler\n')),(0,o.kt)("p",null,"Observe que agora o container em execu\xe7\xe3o aparece listado."),(0,o.kt)("h2",{id:"stop"},"stop"),(0,o.kt)("p",null,"A execu\xe7\xe3o de um container pode ser interrompida com o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"stop"),". Utilizaremos o exemplo anterior."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop interesting_jang\ndocker ps -a\n")),(0,o.kt)("p",null,"Sa\xedda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                        PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              15 minutes ago   Exited (137) 10 seconds ago                            interesting_jang\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,o.kt)("p",null,"Um container que foi parado com o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"stop")," pode ser iniciado novamente com o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"start"),". Por\xe9m, caso o container seja interativo \xe9 necess\xe1rio passar novamente o par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"-i")," novamente para que o terminal do container seja novamente ligado ao terminal do usu\xe1rio."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker start -i interesting_jang\n")),(0,o.kt)("p",null,"Para sair, digite ",(0,o.kt)("inlineCode",{parentName:"p"},"exit"),". Em seguida, visualize os containeres criados."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Sa\xedda:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                     PORTS                    NAMES\n6509aeff9506   ubuntu               "/bin/bash"              22 minutes ago   Exited (0) 2 seconds ago                            interesting_jang\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Atividade")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Observe o valor de ",(0,o.kt)("inlineCode",{parentName:"li"},"Exited"),", na coluna ",(0,o.kt)("inlineCode",{parentName:"li"},"STATUS"),". O que h\xe1 de diferente nas diversas vezes que o container com ubuntu foi execuado?"),(0,o.kt)("li",{parentName:"ul"},"Por qu\xea os valores s\xe3o diferentes?")),(0,o.kt)("h2",{id:"rm"},"rm"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker rm <id ou nome do container>\n")),(0,o.kt)("p",null,"Para que um container possa ser removido, este n\xe3o pode estar em execu\xe7\xe3o."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm interesting_jang\n")),(0,o.kt)("p",null,"Para visualizar:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'docker ps -a\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,o.kt)("p",null,"Observe que o container n\xe3o existe mais."),(0,o.kt)("p",null,"No momento da cria\xe7\xe3o de um container com o par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"run"),", \xe9 poss\xedvel informar que o container seja removido ap\xf3s a finaliza\xe7\xe3o de sua execu\xe7\xe3o com o uso do par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"--rm"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -it ubuntu /bin/bash\n")),(0,o.kt)("p",null,"Digite ",(0,o.kt)("inlineCode",{parentName:"p"},"exit")," para sair do container, e em seguida observe os containers:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps -a\n")),(0,o.kt)("p",null,"Sa\xedda:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID   IMAGE                COMMAND                  CREATED          STATUS                      PORTS                    NAMES\n3da575d7b1b5   hello-world          "/hello"                 3 seconds ago    Exited (0) 2 seconds ago                               hello\n3b9de5ab5855   hello-world          "/hello"                 26 minutes ago   Exited (0) 7 minutes ago                               upbeat_euler\n')),(0,o.kt)("p",null,"Como pode ser observado, o container com a imagem ubuntu n\xe3o est\xe1 na lista, que foi removido quando finalizado."),(0,o.kt)("h2",{id:"pause-unpause"},"pause unpause"),(0,o.kt)("p",null,"\xc9 poss\xedvel paralisar a execu\xe7\xe3o de um container sem finaliz\xe1-lo, com os comandos ",(0,o.kt)("inlineCode",{parentName:"p"},"pause")," e ",(0,o.kt)("inlineCode",{parentName:"p"},"unpause"),"."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Em um terminal, crie um container chamado ",(0,o.kt)("em",{parentName:"li"},"counter")," com um bash em ubuntu e gere um contador que apresenta valores em um la\xe7o de repeti\xe7\xe3o, com espera de 1 segundo em cada itera\xe7\xe3o.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -ti --name counter ubuntu /bin/bash\n")),(0,o.kt)("p",null,"No container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"i=0\nwhile true\ndo\necho $i\nsleep 1s\nlet i++\ndone\n")),(0,o.kt)("p",null,"Observe que o contador mostra o valor de maneira ininterrupta, a cada 1 segundo. Abra um outro terminal, e pause o container ",(0,o.kt)("em",{parentName:"p"},"counter"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker pause counter\n")),(0,o.kt)("p",null,"Observe que o contador parou. Para que possa continar, podemos utilizar o comando ",(0,o.kt)("inlineCode",{parentName:"p"},"unpause"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker unpause counter\n")),(0,o.kt)("h2",{id:"portas"},"portas"),(0,o.kt)("p",null,"\xc9 poss\xedvel realizar a comunica\xe7\xe3o com um container utilizando portas de comunica\xe7\xe3o. Para tal, as portas devem ser informadas durante a cria\xe7\xe3o do container utilizando o par\xe2metro ",(0,o.kt)("inlineCode",{parentName:"p"},"-p"),". Sua sintaxe \xe9 ",(0,o.kt)("inlineCode",{parentName:"p"},"-p <porta host>:<porta container>")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Exemplo")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -ti -p 10000:10100 ubuntu /bin/bash\n")),(0,o.kt)("p",null,"Neste caso, uma comunica\xe7\xe3o do ",(0,o.kt)("em",{parentName:"p"},"host")," local na porta 10000 ir\xe1 redirecional esse conta\xfado para dentro do container na porta 10000. "),(0,o.kt)("p",null,"Vamos explorar melhor este exemplo. Instalaremos no container a aplica\xe7\xe3o ",(0,o.kt)("em",{parentName:"p"},"netcat"),", que permite realizar a troca de dados utilizando portas TCP. No container, execute:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apt update && apt -y install netcat\nnc -l 10100\n")),(0,o.kt)("p",null,"Neste ponto, o ",(0,o.kt)("em",{parentName:"p"},"netcat")," est\xe1 aguardando conex\xf5es na porta ",(0,o.kt)("inlineCode",{parentName:"p"},"10100"),"."),(0,o.kt)("p",null,"Abra um outro terminal e execute:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'nc localhost 10000 <<< "Hello World!"\n')),(0,o.kt)("p",null,"Observe que na m\xe1quina ",(0,o.kt)("em",{parentName:"p"},"host")," o conte\xfado foi enviado \xe0 porta ",(0,o.kt)("inlineCode",{parentName:"p"},"10000"),", enquanto que este valor foi recebido dentro do container na porta ",(0,o.kt)("inlineCode",{parentName:"p"},"10100"),". Isto d\xe1-se pelo redirecionamento da porta pelo Docker. Este mecanismo de redirecionamento ocorre porque a mesma porta do ",(0,o.kt)("em",{parentName:"p"},"host")," n\xe3o pode ser utilizada para mais de um servi\xe7o. Com isto, podemos ter diversos containers que ouvem em determinada porta (diversos servidores web na porta 80, p.ex.), e estes servidores s\xe3o acessados pelo ",(0,o.kt)("em",{parentName:"p"},"host")," utilizando diferentes portas externas, como (8080, 8081, 8082, p.ex.)"))}d.isMDXComponent=!0}}]);